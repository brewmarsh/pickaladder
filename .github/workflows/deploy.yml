name: Deploy to Hostinger

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create project directory on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          script: |
            mkdir -p ~/picka-server

      - name: Copy config files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          source: "docker-compose.prod.yml,init.sql"
          target: "~/picka-server"

      - name: Deploy to Hostinger VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 22
          script: |
            cd ~/picka-server

            # Force stop any container using port 27272
            CONTAINER_ID=$(docker ps -q --filter "publish=27272")
            if [ -n "$CONTAINER_ID" ]; then
              echo "Stopping container $CONTAINER_ID using port 27272"
              docker stop $CONTAINER_ID
            fi

            # Login to GitHub Container Registry
            docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}

            # Set environment variables for docker-compose
            export IMAGE_TAG=ghcr.io/${{ github.repository }}:${{ github.sha }}
            export SECRET_KEY='${{ secrets.SECRET_KEY }}'
            export MAIL_SERVER='${{ secrets.MAIL_SERVER }}'
            export MAIL_PORT='${{ secrets.MAIL_PORT }}'
            export MAIL_USE_TLS='${{ secrets.MAIL_USE_TLS }}'
            export MAIL_USERNAME='${{ secrets.MAIL_USERNAME }}'
            export MAIL_PASSWORD='${{ secrets.MAIL_PASSWORD }}'
            export POSTGRES_USER='${{ secrets.POSTGRES_USER }}'
            export POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}'
            export POSTGRES_DB='${{ secrets.POSTGRES_DB }}'

            # Tear down the old environment and remove the volume to ensure a clean start
            docker-compose -f docker-compose.prod.yml down -v

            # Pull the latest images
            docker-compose -f docker-compose.prod.yml pull

            # Start the services
            docker-compose -f docker-compose.prod.yml up -d --remove-orphans

            # Clean up old images
            docker image prune -f
